<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="JW.mapper.TCourseMapper">
	<resultMap id="BaseResultMap" type="JW.pojo.TCourse">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="credit" property="credit" jdbcType="INTEGER" />
		<result column="classroom" property="classroom" jdbcType="VARCHAR" />
		<result column="people" property="people" jdbcType="INTEGER" />
		<result column="section_id" property="sectionId" jdbcType="VARCHAR" />
		<result column="week_id" property="weekId" jdbcType="VARCHAR" />
		<result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
		<result column="nature_id" property="natureId" jdbcType="VARCHAR" />
		<result column="totalPeople" property="totalpeople" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="ManyResultMap" type="JW.pojo.TCourse">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="credit" property="credit" jdbcType="INTEGER" />
		<result column="classroom" property="classroom" jdbcType="VARCHAR" />
		<result column="people" property="people" jdbcType="INTEGER" />
		<result column="section_id" property="sectionId" jdbcType="VARCHAR" />
		<result column="week_id" property="weekId" jdbcType="VARCHAR" />
		<result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
		<result column="nature_id" property="natureId" jdbcType="VARCHAR" />
		<result column="totalPeople" property="totalpeople" jdbcType="INTEGER" />
		<association property="section" javaType="JW.pojo.TSection">
			<id column="sid" property="id" jdbcType="VARCHAR" />
			<result column="week" property="week" jdbcType="VARCHAR" />
			<result column="section" property="section" jdbcType="VARCHAR" />
		</association>
		<association property="week" javaType="JW.pojo.TWeek">
			<id column="wid" property="id" jdbcType="VARCHAR" />
			<result column="time" property="time" jdbcType="VARCHAR" />
		</association>
		<association property="nature" javaType="JW.pojo.TNature">
			<id column="nid" property="id" jdbcType="VARCHAR" />
			<result column="nname" property="name" jdbcType="VARCHAR" />
		</association>
		<association property="teacher" javaType="JW.pojo.TTeacher">
			<id column="tid" property="tid" jdbcType="VARCHAR" />
			<result column="tname" property="tname" jdbcType="VARCHAR" />
			<result column="college_id" property="collegeId" jdbcType="VARCHAR" />
			<association property="college" javaType="JW.pojo.TCollege">
				<id column="cid" property="id" jdbcType="VARCHAR" />
				<result column="cname" property="name" jdbcType="VARCHAR" />
			</association>
		</association>
	</resultMap>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, credit, classroom, people, section_id, week_id,
		teacher_id,
		nature_id,
		totalPeople
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="JW.pojo.TCourseExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<!-- 分页一对多查询 -->
	<select id="findAll" resultMap="ManyResultMap">
		SELECT c.*,w.`id` wid,s.`id`
		sid,n.`id` nid,n.`name` nname,tc.`name`
		cname,tc.`id`
		cid,s.`section`,s.`week`,w.`time`,t.`college_id`,t.`tname`,t.`tid`
		FROM
		(`t_course` c,`t_week` w,`t_section`
		s,`t_nature` n) LEFT JOIN
		`t_teacher` t ON c.`teacher_id`=t.`tid`
		LEFT
		JOIN `t_college` tc ON
		t.`college_id`=tc.`id`
		WHERE
		c.`week_id`=w.`id` AND
		c.`section_id`=s.`id` AND c.`nature_id`=n.`id`
	</select>
	<!-- 教师查询 -->
	<select id="findCourseByteacherId" resultMap="ManyResultMap"
		parameterType="java.lang.String">
		SELECT c.*,w.`id` wid,s.`id`
		sid,n.`id` nid,n.`name`
		nname,
		s.`section`,s.`week`,w.`time`,t.`tname`,t.`tid` FROM
		(`t_course`
		c,`t_week` w,`t_section`
		s,`t_nature` n,`t_teacher` t)
		WHERE
		c.`week_id`=w.`id` AND c.`section_id`=s.`id` AND c.`nature_id`=n.`id`
		AND c.`teacher_id`=t.`tid` AND t.`tid`=#{value}
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_course
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		t_course
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="JW.pojo.TCourseExample">
		delete from t_course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="JW.pojo.TCourse">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		insert into t_course (id,
		name, credit,
		classroom, people, section_id,
		week_id, teacher_id,
		nature_id,
		totalPeople)
		values
		(#{id,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{credit,jdbcType=INTEGER},
		#{classroom,jdbcType=VARCHAR},
		#{people,jdbcType=INTEGER},
		#{sectionId,jdbcType=VARCHAR},
		#{weekId,jdbcType=VARCHAR},
		#{teacherId,jdbcType=VARCHAR},
		#{natureId,jdbcType=VARCHAR},
		#{totalpeople,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="JW.pojo.TCourse">
		insert into t_course
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="credit != null">
				credit,
			</if>
			<if test="classroom != null">
				classroom,
			</if>
			<if test="people != null">
				people,
			</if>
			<if test="sectionId != null">
				section_id,
			</if>
			<if test="weekId != null">
				week_id,
			</if>
			<if test="teacherId != null">
				teacher_id,
			</if>
			<if test="natureId != null">
				nature_id,
			</if>
			<if test="totalpeople != null">
				totalPeople,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="credit != null">
				#{credit,jdbcType=INTEGER},
			</if>
			<if test="classroom != null">
				#{classroom,jdbcType=VARCHAR},
			</if>
			<if test="people != null">
				#{people,jdbcType=INTEGER},
			</if>
			<if test="sectionId != null">
				#{sectionId,jdbcType=VARCHAR},
			</if>
			<if test="weekId != null">
				#{weekId,jdbcType=VARCHAR},
			</if>
			<if test="teacherId != null">
				#{teacherId,jdbcType=VARCHAR},
			</if>
			<if test="natureId != null">
				#{natureId,jdbcType=VARCHAR},
			</if>
			<if test="totalpeople != null">
				#{totalpeople,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="JW.pojo.TCourseExample"
		resultType="java.lang.Integer">
		select count(*) from t_course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update t_course
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.credit != null">
				credit = #{record.credit,jdbcType=INTEGER},
			</if>
			<if test="record.classroom != null">
				classroom = #{record.classroom,jdbcType=VARCHAR},
			</if>
			<if test="record.people != null">
				people = #{record.people,jdbcType=INTEGER},
			</if>
			<if test="record.sectionId != null">
				section_id = #{record.sectionId,jdbcType=VARCHAR},
			</if>
			<if test="record.weekId != null">
				week_id = #{record.weekId,jdbcType=VARCHAR},
			</if>
			<if test="record.teacherId != null">
				teacher_id = #{record.teacherId,jdbcType=VARCHAR},
			</if>
			<if test="record.natureId != null">
				nature_id = #{record.natureId,jdbcType=VARCHAR},
			</if>
			<if test="record.totalpeople != null">
				totalPeople = #{record.totalpeople,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update t_course
		set id = #{record.id,jdbcType=VARCHAR},
		name =
		#{record.name,jdbcType=VARCHAR},
		credit =
		#{record.credit,jdbcType=INTEGER},
		classroom =
		#{record.classroom,jdbcType=VARCHAR},
		people =
		#{record.people,jdbcType=INTEGER},
		section_id =
		#{record.sectionId,jdbcType=VARCHAR},
		week_id =
		#{record.weekId,jdbcType=VARCHAR},
		teacher_id =
		#{record.teacherId,jdbcType=VARCHAR},
		nature_id =
		#{record.natureId,jdbcType=VARCHAR},
		totalPeople =
		#{record.totalpeople,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="JW.pojo.TCourse">
		update t_course
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="credit != null">
				credit = #{credit,jdbcType=INTEGER},
			</if>
			<if test="classroom != null">
				classroom = #{classroom,jdbcType=VARCHAR},
			</if>
			<if test="people != null">
				people = #{people,jdbcType=INTEGER},
			</if>
			<if test="sectionId != null">
				section_id = #{sectionId,jdbcType=VARCHAR},
			</if>
			<if test="weekId != null">
				week_id = #{weekId,jdbcType=VARCHAR},
			</if>
			<if test="teacherId != null">
				teacher_id = #{teacherId,jdbcType=VARCHAR},
			</if>
			<if test="natureId != null">
				nature_id = #{natureId,jdbcType=VARCHAR},
			</if>
			<if test="totalpeople != null">
				totalPeople = #{totalpeople,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="JW.pojo.TCourse">
		update t_course
		set name = #{name,jdbcType=VARCHAR},
		credit =
		#{credit,jdbcType=INTEGER},
		classroom = #{classroom,jdbcType=VARCHAR},
		people = #{people,jdbcType=INTEGER},
		section_id =
		#{sectionId,jdbcType=VARCHAR},
		week_id = #{weekId,jdbcType=VARCHAR},
		teacher_id = #{teacherId,jdbcType=VARCHAR},
		nature_id =
		#{natureId,jdbcType=VARCHAR},
		totalPeople =
		#{totalpeople,jdbcType=INTEGER}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByCoursePeople" parameterType="JW.pojo.TCourse">
		update t_course
		set people=#{people,jdbcType=INTEGER} where id=#{id,jdbcType=VARCHAR}
	</update>
</mapper>